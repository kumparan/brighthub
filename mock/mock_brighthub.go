// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kumparan/brighthub (interfaces: Client)

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	brighthub "github.com/kumparan/brighthub"
	reflect "reflect"
)

// MockClient is a mock of Client interface
type MockClient struct {
	ctrl     *gomock.Controller
	recorder *MockClientMockRecorder
}

// MockClientMockRecorder is the mock recorder for MockClient
type MockClientMockRecorder struct {
	mock *MockClient
}

// NewMockClient creates a new mock instance
func NewMockClient(ctrl *gomock.Controller) *MockClient {
	mock := &MockClient{ctrl: ctrl}
	mock.recorder = &MockClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockClient) EXPECT() *MockClientMockRecorder {
	return m.recorder
}

// AddVideoToFolder mocks base method
func (m *MockClient) AddVideoToFolder(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddVideoToFolder", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddVideoToFolder indicates an expected call of AddVideoToFolder
func (mr *MockClientMockRecorder) AddVideoToFolder(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddVideoToFolder", reflect.TypeOf((*MockClient)(nil).AddVideoToFolder), arg0, arg1)
}

// CreateVideo mocks base method
func (m *MockClient) CreateVideo(arg0 *brighthub.CreateVideoRequest) (*brighthub.CreateVideoResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateVideo", arg0)
	ret0, _ := ret[0].(*brighthub.CreateVideoResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateVideo indicates an expected call of CreateVideo
func (mr *MockClientMockRecorder) CreateVideo(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateVideo", reflect.TypeOf((*MockClient)(nil).CreateVideo), arg0)
}

// GetIngestProfile mocks base method
func (m *MockClient) GetIngestProfile(arg0 string) (*brighthub.IngestProfile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetIngestProfile", arg0)
	ret0, _ := ret[0].(*brighthub.IngestProfile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetIngestProfile indicates an expected call of GetIngestProfile
func (mr *MockClientMockRecorder) GetIngestProfile(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetIngestProfile", reflect.TypeOf((*MockClient)(nil).GetIngestProfile), arg0)
}

// GetVideoMasterInfo mocks base method
func (m *MockClient) GetVideoMasterInfo(arg0 string) (*brighthub.VideoMasterInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVideoMasterInfo", arg0)
	ret0, _ := ret[0].(*brighthub.VideoMasterInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVideoMasterInfo indicates an expected call of GetVideoMasterInfo
func (mr *MockClientMockRecorder) GetVideoMasterInfo(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVideoMasterInfo", reflect.TypeOf((*MockClient)(nil).GetVideoMasterInfo), arg0)
}

// IngestVideo mocks base method
func (m *MockClient) IngestVideo(arg0 string, arg1 *brighthub.IngestVideoRequest) (*brighthub.IngestVideoResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IngestVideo", arg0, arg1)
	ret0, _ := ret[0].(*brighthub.IngestVideoResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// IngestVideo indicates an expected call of IngestVideo
func (mr *MockClientMockRecorder) IngestVideo(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IngestVideo", reflect.TypeOf((*MockClient)(nil).IngestVideo), arg0, arg1)
}
